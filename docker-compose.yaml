version: "3.7"
services:
  redis:
    image: redis:5-alpine
    container_name: twitch-plays-crosswords-redis
    volumes:
      - type: volume
        source: redis
        target: "/data"
        volume:
          nocopy: true
    ports:
      - 6379:6379/tcp
    restart: unless-stopped

  api:
    build:
      context: api
      target: development
    command: >-
      reflex
        --start-service
        --decoration="none"
        --regex='\.go$$'
        --inverse-regex='\.gen.go$$'
      --
        sh -c 'go run .'
    container_name: twitch-plays-crosswords-api
    depends_on:
      - converter
      - redis
    environment:
      GIN_MODE: release # debug only prints warning messages on startup
      CONVERTER_HOST: "converter:5001"
      REDIS_HOST: "redis:6379"
    volumes:
      - type: bind
        source: "./api"
        target: "/src"
    expose:
      - 5000
    ports:
      - 5000:5000/tcp
    restart: unless-stopped

  bot:
    build:
      context: bot
      target: development
    command: >-
      reflex
        --start-service
        --decoration="none"
        --regex='\.go$$'
        --inverse-regex='\.gen.go$$'
      --
        sh -c 'go run .'
    container_name: twitch-plays-crosswords-bot
    depends_on:
      - api
    environment:
      API_HOST: "api:5000"
      ENV: "local"  # local (twitch disabled), development, or production
      TWITCH_USERNAME:
      TWITCH_OAUTH_TOKEN:
    volumes:
      - type: bind
        source: "./bot"
        target: "/src"
    ports:
      - 5002:5002/tcp  # this is only needed to test locally
    restart: unless-stopped

  ui:
    build:
      context: ui
      target: development
    command: npm run start
    container_name: twitch-plays-crosswords-ui
    depends_on:
      - api
    volumes:
      - type: bind
        source: "./ui"
        target: "/src"
    expose:
      - 3000
    ports:
      - 3000:3000/tcp
    restart: unless-stopped

  converter:
    build:
      context: converter
      args:
        REQUIREMENTS_FILENAME: requirements-dev.txt
    working_dir: "/usr/src/app"
    container_name: twitch-plays-crosswords-converter
    environment:
      PYTHON_UNBUFFERED: "true"
      PYTHONDONTWRITEBYTECODE: "1"
      FLASK_ENV: "development"
    volumes:
      - type: bind
        source: "./converter"
        target: "/usr/src/app"
    expose:
      - 5001
    ports:
      - 5001:5001/tcp
    restart: unless-stopped

volumes:
  redis: