version: "3.7"
services:
  api:
    container_name: puzzles-with-chat-api
    build:
      context: api
      target: development
    command: >-
      reflex
        --start-service
        --decoration="none"
        --regex='\.go$$'
        --inverse-regex='\.gen.go$$'
      --
        sh -c 'go run .'
    depends_on:
      - redis
    environment:
      REDIS_HOST: "redis:6379"
    volumes:
      - type: bind
        source: "./api"
        target: "/src"
    expose:
      - 5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`puzzles-with-chat.localhost`) && PathPrefix(`/api`)"
    restart: unless-stopped

  bot:
    container_name: puzzles-with-chat-bot
    build:
      context: bot
      target: development
    command: >-
      reflex
        --start-service
        --decoration="none"
        --regex='\.go$$'
        --inverse-regex='\.gen.go$$'
      --
        sh -c 'go run .'
    depends_on:
      - api
    environment:
      API_HOST: "api:5000"
      ENV: "local"  # local (twitch disabled), development, or production
      TWITCH_USERNAME:
      TWITCH_OAUTH_TOKEN:
    volumes:
      - type: bind
        source: "./bot"
        target: "/src"
    expose:
      - 5000           # this is only needed for the local TCP listener
    ports:
      - 5000:5000/tcp  # this is only needed to test locally
    restart: unless-stopped

  controller:
    container_name: puzzles-with-chat-controller
    build:
      context: controller
      target: development
    command: >-
      reflex
        --start-service
        --decoration="none"
        --regex='\.go$$'
        --inverse-regex='\.gen.go$$'
      --
        sh -c 'go run .'
    depends_on:
      - api
    environment:
      API_HOST: "api:5000"
    volumes:
      - type: bind
        source: "./controller"
        target: "/src"
    restart: unless-stopped

  proxy:
    image: traefik:v2.9
    container_name: puzzles-with-chat-proxy
    command:
      - "--api.dashboard=true"
      - "--entrypoints.web.address=:80"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    volumes:
      - type: bind
        source: "/var/run/docker.sock"
        target: "/var/run/docker.sock"
        read_only: true
    ports:
      - "80:80/tcp"
      - "8080:8080/tcp"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.service=api@internal"
    restart: unless-stopped

  redis:
    image: redis:6-alpine
    container_name: puzzles-with-chat-redis
    volumes:
      - type: volume
        source: redis
        target: "/data"
        volume:
          nocopy: true
    expose:
      - 6379
    ports:
      - 6379:6379/tcp
    restart: unless-stopped

  ui:
    container_name: puzzles-with-chat-ui
    build:
      context: ui
      target: development
    depends_on:
      - api
    environment:
      PORT: 5000
    tty: true  # react-scripts require a TTY or else they crash
    volumes:
      - type: bind
        source: "./ui"
        target: "/src"
      - type: volume
        source: ui-node-modules
        target: "/src/node_modules"
    expose:
      - 5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ui.rule=Host(`puzzles-with-chat.localhost`) && PathPrefix(`/`)"
    restart: unless-stopped

volumes:
  redis:
  ui-node-modules:
